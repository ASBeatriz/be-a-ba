"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1782],{9936:(e,a,s)=>{s.r(a),s.d(a,{assets:()=>d,contentTitle:()=>n,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"logica-combinacional/circuitos-para-opcoes-logicas","title":"Circu\xedtos para Opera\xe7\xf5es L\xf3gicas","description":"Grupo 17","source":"@site/docs/3-logica-combinacional/6-circuitos-para-opcoes-logicas.md","sourceDirName":"3-logica-combinacional","slug":"/logica-combinacional/circuitos-para-opcoes-logicas","permalink":"/be-a-ba/docs/logica-combinacional/circuitos-para-opcoes-logicas","draft":false,"unlisted":false,"editUrl":"https://github.com/de-abreu/be-a-ba/edit/main/website/docs/3-logica-combinacional/6-circuitos-para-opcoes-logicas.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"title":"Circu\xedtos para Opera\xe7\xf5es L\xf3gicas","description":"Grupo 17"},"sidebar":"tutorialSidebar","previous":{"title":"Circu\xedtos para Opera\xe7\xf5es Aritm\xe9ticas","permalink":"/be-a-ba/docs/logica-combinacional/circuitos-para-operacoes-aritmeticas"},"next":{"title":"Componentes de Circu\xedto de Prop\xf3sito Geral","permalink":"/be-a-ba/docs/logica-combinacional/componentes-de-circuito-de-proposito-geral"}}');var t=s(4848),r=s(8453);const o={title:"Circu\xedtos para Opera\xe7\xf5es L\xf3gicas",description:"Grupo 17"},n=void 0,d={},c=[{value:"O s\xe3o portas l\xf3gicas?",id:"o-s\xe3o-portas-l\xf3gicas",level:3},{value:"Porta NOT",id:"porta-not",level:2},{value:"Porta AND",id:"porta-and",level:2},{value:"Porta NAND",id:"porta-nand",level:2},{value:"Porta OR",id:"porta-or",level:2},{value:"Porta NOR",id:"porta-nor",level:2},{value:"Porta XOR",id:"porta-xor",level:2},{value:"Opera\xe7\xf5es com mais bits de entrada",id:"opera\xe7\xf5es-com-mais-bits-de-entrada",level:2},{value:"Exerc\xedcios",id:"exerc\xedcios",level:2}];function l(e){const a={admonition:"admonition",blockquote:"blockquote",h2:"h2",h3:"h3",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components},{Details:s}=a;return s||function(e,a){throw new Error("Expected "+(a?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(a.h3,{id:"o-s\xe3o-portas-l\xf3gicas",children:"O s\xe3o portas l\xf3gicas?"}),"\n",(0,t.jsx)(a.p,{children:"Portas l\xf3gicas s\xe3o circuitos digitais b\xe1sicos que recebem uma ou mais entradas bin\xe1rias e geram uma sa\xedda bin\xe1ria. Esses circuitos s\xe3o representados por s\xedmbolos com entradas (ou entrada) e sa\xedda indicadas. Normalmente, as entradas aparecem \xe0 esquerda (ou no topo) e as sa\xeddas \xe0 direita (ou na parte inferior). Designers digitais geralmente usam letras do in\xedcio do alfabeto para as entradas e a letra S ou Q para a sa\xedda. A rela\xe7\xe3o entre entradas e sa\xeddas pode ser representada por uma tabela-verdade ou uma equa\xe7\xe3o booleana."}),"\n",(0,t.jsx)(a.p,{children:"A tabela-verdade mostra as entradas \xe0 esquerda e as sa\xeddas correspondentes \xe0 direita, com uma linha para cada combina\xe7\xe3o de entradas. J\xe1 a equa\xe7\xe3o booleana \xe9 uma express\xe3o matem\xe1tica usando vari\xe1veis bin\xe1rias."}),"\n",(0,t.jsx)(a.p,{children:"Vejamos as principais portas l\xf3gicas e suas tabelas verdade:"}),"\n",(0,t.jsx)(a.h2,{id:"porta-not",children:"Porta NOT"}),"\n",(0,t.jsxs)("div",{style:{display:"flex"},children:[(0,t.jsx)("div",{style:{marginRight:"20px"},children:(0,t.jsx)("img",{align:"left",width:"230",height:"230",src:"https://github.com/user-attachments/assets/49b0cd00-3690-4f6d-98fb-3c7f480db75a"})}),(0,t.jsx)("div",{style:{marginRight:"20px"},children:(0,t.jsx)("img",{align:"left",width:"230",height:"230",src:"https://github.com/user-attachments/assets/172ec57e-a936-484a-adf5-ba83f5747d2c"})})]}),"\n",(0,t.jsx)("div",{children:(0,t.jsx)("p",{children:'A porta NOT possui uma entrada A, e uma sa\xedda S, como mostra a Figura. A sa\xedda da porta NOT \xe9 o inverso de sua entrada, exemplo: se A \xe9 FALSO (0), S \xe9 VERDADEIRO (1); se A \xe9 VERDADEIRO, S \xe9 FALSO. Essa rela\xe7\xe3o \xe9 mostrada na tabela-verdade e pela equa\xe7\xe3o booleana na figura. A linha sobre A na equa\xe7\xe3o booleana \xe9 pronunciada como NOT, sendo lido como "S \xe9 igual a N\xc3O A". A porta NOT tamb\xe9m \xe9 chamada de inversora. Outras nota\xe7\xf5es para NOT incluem S = \xacA, S = ~A, e S = !A. '})}),"\n",(0,t.jsx)(a.h2,{id:"porta-and",children:"Porta AND"}),"\n",(0,t.jsxs)("div",{style:{display:"flex"},children:[(0,t.jsx)("div",{style:{marginRight:"20px"},children:(0,t.jsx)("img",{align:"left",width:"230",height:"230",src:"https://github.com/user-attachments/assets/c521a478-0e2e-4c83-ac30-622b710d6570"})}),(0,t.jsx)("div",{style:{marginRight:"20px"},children:(0,t.jsx)("img",{align:"left",width:"230",height:"230",src:"https://github.com/user-attachments/assets/9841bc08-ed74-4bdb-b838-cbc684a3dd3a"})})]}),"\n",(0,t.jsx)("div",{children:(0,t.jsx)("p",{children:'A porta AND, mostrada na Figura, gera uma sa\xedda VERDADEIRA S, somente se ambas as entradas A e B forem VERDADEIRAS; caso contr\xe1rio, a sa\xedda \xe9 FALSA. A conven\xe7\xe3o para listar as entradas \xe9 00, 01, 10, 11, como na contagem bin\xe1ria. A equa\xe7\xe3o booleana para uma porta AND pode ser escrita como S = A\u2022B, S = AB, ou S = A \u2229 B, com o s\xedmbolo \u2229 sendo lido como "intersec\xe7\xe3o". Voc\xea tamb\xe9m pode associar essa porta l\xf3gica com a opera\xe7\xe3o usual de multiplica\xe7\xe3o, de maneira a facilitar sua compreens\xe3o acerca do resultado esperado na sa\xedda para diferentes entradas.'})}),"\n",(0,t.jsx)(a.h2,{id:"porta-nand",children:"Porta NAND"}),"\n",(0,t.jsxs)("div",{style:{display:"flex"},children:[(0,t.jsx)("div",{style:{marginRight:"20px"},children:(0,t.jsx)("img",{align:"left",width:"230",height:"230",src:"https://github.com/user-attachments/assets/81480ce5-5ec4-477f-a386-fff78f995a68"})}),(0,t.jsx)("div",{style:{marginRight:"20px"},children:(0,t.jsx)("img",{align:"left",width:"230",height:"230",src:"https://github.com/user-attachments/assets/2d8e397b-7fbf-41ec-9a5d-6a122333abc2"})})]}),"\n",(0,t.jsx)("div",{children:(0,t.jsx)("p",{children:" Qualquer porta pode ter uma invers\xe3o (bola) para inverter sua opera\xe7\xe3o. A porta NAND realiza a opera\xe7\xe3o NOT AND, sendo FALSA a menos que ambas as entradas sejam VERDADEIRAS, ou seja, ela \xe9 o inverso da porta AND. "})}),"\n",(0,t.jsx)(a.admonition,{type:"tip",children:(0,t.jsx)(a.p,{children:"Compare a tabela verdade da porta AND com a tabela verdade da NAND"})}),"\n",(0,t.jsx)(a.h2,{id:"porta-or",children:"Porta OR"}),"\n",(0,t.jsxs)("div",{style:{display:"flex"},children:[(0,t.jsx)("div",{style:{marginRight:"20px"},children:(0,t.jsx)("img",{align:"right",width:"230",height:"230",src:"https://github.com/user-attachments/assets/990e4bf4-c9b5-44de-b350-ee753a8b0637"})}),(0,t.jsx)("div",{style:{marginLeft:"20px"},children:(0,t.jsx)("img",{align:"right",width:"230",height:"230",src:"https://github.com/user-attachments/assets/5fbb3cb0-e706-4692-a1c7-3e52783a2b67"})})]}),"\n",(0,t.jsx)("div",{children:(0,t.jsx)("p",{children:'A porta OR, ilustrada na Figura, gera uma sa\xedda VERDADEIRA S, se A, B ou ambos forem VERDADEIROS. A equa\xe7\xe3o booleana para OR \xe9 S = A \u222a B. O s\xedmbolo \u222a \xe9 lido como "uni\xe3o", e a express\xe3o S = A + B significa "S \xe9 igual a A ou B".'})}),"\n",(0,t.jsx)(a.h2,{id:"porta-nor",children:"Porta NOR"}),"\n",(0,t.jsxs)("div",{style:{display:"flex"},children:[(0,t.jsx)("div",{style:{marginRight:"20px"},children:(0,t.jsx)("img",{align:"left",width:"230",height:"230",src:"https://github.com/user-attachments/assets/907e24f1-f8fa-44ea-9da3-902aa58786a3"})}),(0,t.jsx)("div",{style:{marginRight:"20px"},children:(0,t.jsx)("img",{align:"left",width:"230",height:"230",src:"https://github.com/user-attachments/assets/ab0b771d-d45a-4610-ab13-ff2dab410724"})})]}),"\n",(0,t.jsx)("div",{children:(0,t.jsx)("p",{children:" Segue a mesma l\xf3gica da porta NAND, sendo o inverso da porta OR, a porta NOR realiza a opera\xe7\xe3o NOT OR, sendo VERDADEIRA se nem A e nem B forem VERDADEIROS. "})}),"\n",(0,t.jsxs)(a.blockquote,{children:["\n",(0,t.jsxs)(a.p,{children:["\ud83d\udca1 ",(0,t.jsx)(a.strong,{children:"Dica:"})," Compare a tabela verdade da porta OR com a tabela verdade da NOR"]}),"\n"]}),"\n",(0,t.jsx)(a.h2,{id:"porta-xor",children:"Porta XOR"}),"\n",(0,t.jsxs)("div",{style:{display:"flex"},children:[(0,t.jsx)("div",{style:{marginLeft:"20px"},children:(0,t.jsx)("img",{align:"right",width:"230",height:"230",src:"https://github.com/user-attachments/assets/955fd231-effe-4983-bbf9-0edb53df2c5a"})}),(0,t.jsx)("div",{style:{marginLeft:"20px"},children:(0,t.jsx)("img",{align:"right",width:"230",height:"230",src:"https://github.com/user-attachments/assets/64b39611-4078-4453-8d46-58b382f09717"})})]}),"\n",(0,t.jsx)("div",{children:(0,t.jsx)("p",{children:'A porta XOR (ou exclusiva, lida como "ex-OR") resulta em S VERDADEIRO, se A ou B, mas n\xe3o ambos, forem VERDADEIROS.'})}),"\n",(0,t.jsx)(a.h2,{id:"opera\xe7\xf5es-com-mais-bits-de-entrada",children:"Opera\xe7\xf5es com mais bits de entrada"}),"\n",(0,t.jsx)(a.p,{children:"Podemos fazer operac\xf5es usando as portas l\xf3gicas, como por exemplo, uma AND com 8 bits."}),"\n",(0,t.jsx)(a.p,{children:"Considere as seguintes entradas: A = 00110001 e B = 01101101."}),"\n",(0,t.jsx)(a.p,{children:"Olhando cada bit da entrada A, par a par, com a entrada B podemos realizar a opere\xe7\xe3o:"}),"\n",(0,t.jsx)(a.admonition,{type:"warning",children:(0,t.jsx)(a.p,{children:"Compare os bits que est\xe3o na mesma posi\xe7\xe3o em ambas as entradas"})}),"\n",(0,t.jsx)(a.admonition,{type:"tip",children:(0,t.jsx)(a.p,{children:"Lembre-se que \u2022 significa a opera\xe7\xe3o AND"})}),"\n",(0,t.jsx)(a.p,{children:"0\u20220 = 0\n0\u20221 = 0\n1\u20221 = 1\n1\u20220 = 0\n0\u20221 = 0\n0\u20221 = 0\n0\u20220 = 0\n1\u20221 = 1"}),"\n",(0,t.jsx)(a.p,{children:"Assim, combinando os resultados obtemos:"}),"\n",(0,t.jsxs)(a.p,{children:["\ud83d\udd0d ",(0,t.jsx)(a.strong,{children:"Resultado:"})," 00100001"]}),"\n",(0,t.jsx)(a.h2,{id:"exerc\xedcios",children:"Exerc\xedcios"}),"\n",(0,t.jsxs)(a.blockquote,{children:["\n",(0,t.jsx)(a.p,{children:"1- Determine a express\xe3o do circuito l\xf3gico abaixo."}),"\n"]}),"\n",(0,t.jsx)("p",{align:"center",children:(0,t.jsx)("img",{width:"420",height:"250",src:"https://github.com/user-attachments/assets/a044d985-9164-470a-af10-7f9ff836c3d0"})}),"\n",(0,t.jsxs)(a.blockquote,{children:["\n",(0,t.jsx)(a.p,{children:"2- Fa\xe7a a tabela verdade do circuito abaixo."}),"\n"]}),"\n",(0,t.jsx)("p",{align:"center",children:(0,t.jsx)("img",{width:"420",height:"250",src:"https://github.com/user-attachments/assets/f6075e48-ac75-4559-834f-054e70a5c648"})}),"\n",(0,t.jsxs)(a.blockquote,{children:["\n",(0,t.jsx)(a.p,{children:"Exerc\xedcio 3 - Fa\xe7a uma opera\xe7\xe3o de OR com as entradas A = 01111101 e B = 01000100"}),"\n"]}),"\n",(0,t.jsxs)(a.blockquote,{children:["\n",(0,t.jsx)(a.p,{children:"4- Fa\xe7a a opera\xe7\xe3o XOR com as entradas A = 00011101 e B = 11011100"}),"\n"]}),"\n",(0,t.jsxs)(s,{children:[(0,t.jsxs)(a.p,{children:[(0,t.jsx)("summary",{children:"Gabarito"}),"\nQuest\xe3o 1 -\n|((A.B) . (C+D))"]}),(0,t.jsxs)(a.blockquote,{children:["\n",(0,t.jsx)(a.p,{children:"Tudo negado."}),"\n"]}),(0,t.jsx)(a.p,{children:"Quest\xe3o 2 -"}),(0,t.jsxs)(a.table,{children:[(0,t.jsx)(a.thead,{children:(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.th,{children:"A"}),(0,t.jsx)(a.th,{children:"B"}),(0,t.jsx)(a.th,{children:"C"}),(0,t.jsx)(a.th,{children:"S"})]})}),(0,t.jsxs)(a.tbody,{children:[(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.td,{children:"0"}),(0,t.jsx)(a.td,{children:"0"}),(0,t.jsx)(a.td,{children:"0"}),(0,t.jsx)(a.td,{children:"0"})]}),(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.td,{children:"0"}),(0,t.jsx)(a.td,{children:"0"}),(0,t.jsx)(a.td,{children:"1"}),(0,t.jsx)(a.td,{children:"1"})]}),(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.td,{children:"0"}),(0,t.jsx)(a.td,{children:"1"}),(0,t.jsx)(a.td,{children:"0"}),(0,t.jsx)(a.td,{children:"0"})]}),(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.td,{children:"0"}),(0,t.jsx)(a.td,{children:"1"}),(0,t.jsx)(a.td,{children:"1"}),(0,t.jsx)(a.td,{children:"1"})]}),(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.td,{children:"1"}),(0,t.jsx)(a.td,{children:"0"}),(0,t.jsx)(a.td,{children:"0"}),(0,t.jsx)(a.td,{children:"0"})]}),(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.td,{children:"1"}),(0,t.jsx)(a.td,{children:"0"}),(0,t.jsx)(a.td,{children:"1"}),(0,t.jsx)(a.td,{children:"1"})]}),(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.td,{children:"1"}),(0,t.jsx)(a.td,{children:"1"}),(0,t.jsx)(a.td,{children:"0"}),(0,t.jsx)(a.td,{children:"1"})]}),(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.td,{children:"1"}),(0,t.jsx)(a.td,{children:"1"}),(0,t.jsx)(a.td,{children:"1"}),(0,t.jsx)(a.td,{children:"1"})]})]})]}),(0,t.jsx)(a.p,{children:"Quest\xe3o 3 -\n01111101"}),(0,t.jsx)(a.p,{children:"Quest\xe3o 4 -\n11000001"})]})]})}function h(e={}){const{wrapper:a}={...(0,r.R)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,a,s)=>{s.d(a,{R:()=>o,x:()=>n});var i=s(6540);const t={},r=i.createContext(t);function o(e){const a=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function n(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(r.Provider,{value:a},e.children)}}}]);